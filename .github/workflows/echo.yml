# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow if an issue comment has "/benchmark"
  issue_comment:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build-pr:
    if: ${{ github.event.issue.pull_request }}
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo "${{ toJSON(github.event) }}"

  build-comment:
    if: ${{ github.event.issue.pull_request && contains(github.event.comment.body, '/run-benchmark') }}
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    permissions:
      issues: write
      pull-requests: write

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # - name: Find ref
      #   id: find-ref
      #   run: |
      #     printf "REF=%s" $(curl ${{ github.event.issue.pull_request.url }} 2> /dev/null | jq -r .head.ref) >> "$GITHUB_OUTPUT"
      # - uses: actions/checkout@v4
      #   with:
      #     ref: ${{ steps.find-ref.outputs.REF }}
      # - name: Show top commit
      #   id: git-commit
      #   run: |
      #     { echo 'COMMIT<<EOF'; git log -1; echo EOF; } >> "$GITHUB_OUTPUT"
      - uses: actions/github-script@v6
        id: find-ref
        with:
          result-encoding: string
          script: |
            const pr = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            })
            return pr.data.head.ref
      - name: PR ref
        run: echo git checkout ${{ steps.find-ref.outputs.result }}
      - uses: actions/checkout@v4
        with:
          ref: ${{ steps.find-ref.outputs.result }}
      - name: Show top commit
        id: git-commit
        run: |
          { echo 'COMMIT<<EOF'; git log -1; echo EOF; } >> "$GITHUB_OUTPUT"
      - uses: actions/github-script@v6
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          script: |
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: `${{ steps.git-commit.outputs.result }}`
            })
